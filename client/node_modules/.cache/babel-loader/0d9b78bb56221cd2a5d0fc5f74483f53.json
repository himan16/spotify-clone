{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Desktop/test/web development/my-spotify/my-spotify/client/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth.js\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport TrackSearchResult from \"./TrackSearchResult.js\";\nimport Player from \"./Player.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"9520eccbac5849a1bd5c98af590bfc0d\"\n});\n\nfunction Dashboard(props) {\n  _s();\n\n  const accessToken = useAuth(props.code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n  }\n\n  console.log(accessToken);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => {\n        setSearch(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: [searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n        track: track,\n        chooseTrack: chooseTrack\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)), searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"iXdh45Kawy4N93zSRktyxCa9wI4=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/himanshu/Desktop/test/web development/my-spotify/my-spotify/client/src/Dashboard.js"],"names":["React","useState","useEffect","useAuth","Container","Form","SpotifyWebApi","TrackSearchResult","Player","spotifyApi","clientId","Dashboard","props","accessToken","code","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","chooseTrack","track","console","log","setAccessToken","cancel","searchTracks","then","res","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","e","target","value","overflowY","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport useAuth from \"./useAuth.js\";\nimport {Container, Form} from \"react-bootstrap\"\nimport SpotifyWebApi from \"spotify-web-api-node\" \nimport TrackSearchResult from \"./TrackSearchResult.js\"\nimport Player from \"./Player.js\"\nconst spotifyApi = new SpotifyWebApi({\n    clientId: \"9520eccbac5849a1bd5c98af590bfc0d\"\n})\n\nfunction Dashboard(props){\n    const accessToken = useAuth(props.code)\n    const [search, setSearch] = useState(\"\")\n    const [searchResults, setSearchResults] = useState([])\n    const [playingTrack, setPlayingTrack] = useState()\n\n    function chooseTrack(track){\n        setPlayingTrack(track)\n        setSearch(\"\")\n    }\n    console.log(accessToken)\n    useEffect(()=>{\n       if(!accessToken) return\n       spotifyApi.setAccessToken(accessToken);\n    }, [accessToken])\n\n    useEffect(()=>{\n       if(!search) return setSearchResults([])\n       if(!accessToken) return\n       let cancel = false\n       spotifyApi.searchTracks(search).then(res=>{\n           if (cancel) return\n           setSearchResults(\n            res.body.tracks.items.map(track=>{\n                    const smallestAlbumImage = track.album.images.reduce(\n                        (smallest, image)=>{\n                            if(image.height < smallest.height) return image\n                            return smallest\n                        },\n                        track.album.images[0]\n                    )\n                    return{\n                        artist: track.artists[0].name,\n                        title: track.name,\n                        uri: track.uri,\n                        albumUrl: smallestAlbumImage.url\n                    }\n            })\n           )\n       })\n       return ()=> cancel=true\n    }, [search, accessToken])\n\n    return(\n        <Container className=\"d-flex flex-column py-2\" style={{height: \"100vh\"}}>\n            <Form.Control\n                type='search'\n                placeholder=\"Search Songs/Artists\"\n                value={search}\n                onChange={e=>{setSearch(e.target.value)}}\n            />\n            <div className=\"flex-grow-1 my-2\" style={{overflowY:\"auto\"}}>\n                {searchResults.map(track=>(\n                    <TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack}/>\n                ))}\n                {searchResults.length === 0 && (\n                    <div className=\"text-center\" style={{}}></div>\n                )}  \n\n\n            </div>\n            <div><Player accessToken={accessToken} trackUri={playingTrack?.uri} /></div>\n        </Container>\n    );\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}