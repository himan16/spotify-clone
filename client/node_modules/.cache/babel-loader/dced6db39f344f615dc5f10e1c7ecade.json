{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Desktop/test/web development/my-spotify/my-spotify/client/src/Player.js\";\nimport React, { useEffect, useState } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Player(props) {\n  console.log(props.trackUri);\n  if (!props.accessToken) return null;\n  return /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n    token: props.accessToken,\n    showSaveIcon: true,\n    callback: state => {\n      if (!state.isPlaying) setPlay(false);\n    },\n    play: play,\n    uris: props.trackUri ? [props.trackUri] : []\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/himanshu/Desktop/test/web development/my-spotify/my-spotify/client/src/Player.js"],"names":["React","useEffect","useState","SpotifyPlayer","Player","props","console","log","trackUri","accessToken","state","isPlaying","setPlay","play"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,aAAP,MAA0B,4BAA1B;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAElBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AACA,MAAI,CAACH,KAAK,CAACI,WAAX,EAAwB,OAAO,IAAP;AAGxB,sBACI,QAAC,aAAD;AACI,IAAA,KAAK,EAAEJ,KAAK,CAACI,WADjB;AAEI,IAAA,YAAY,MAFhB;AAGI,IAAA,QAAQ,EAAEC,KAAK,IAAE;AACb,UAAG,CAACA,KAAK,CAACC,SAAV,EAAqBC,OAAO,CAAC,KAAD,CAAP;AACxB,KALL;AAMI,IAAA,IAAI,EAAEC,IANV;AAOI,IAAA,IAAI,EAAGR,KAAK,CAACG,QAAN,GAAiB,CAACH,KAAK,CAACG,QAAP,CAAjB,GAAkC;AAP7C;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;KAjBQJ,M;AAmBT,eAAeA,MAAf","sourcesContent":["import React, {useEffect, useState} from \"react\"\n\nimport SpotifyPlayer from \"react-spotify-web-playback\"\n\nfunction Player(props){\n    \n    console.log(props.trackUri)\n    if (!props.accessToken) return null\n\n    \n    return (\n        <SpotifyPlayer\n            token={props.accessToken}\n            showSaveIcon\n            callback={state=>{\n                if(!state.isPlaying) setPlay(false)\n            }}\n            play={play}\n            uris={ props.trackUri ? [props.trackUri]:[]}\n        />\n    )\n}\n\nexport default Player"]},"metadata":{},"sourceType":"module"}