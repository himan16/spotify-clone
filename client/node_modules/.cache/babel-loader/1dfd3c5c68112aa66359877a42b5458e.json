{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Desktop/test/web development/my-spotify/my-spotify/client/src/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport useAuth from \"./useAuth.js\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport TrackSearchResult from \"./TrackSearchResult.js\";\nimport Player from \"./Player.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: \"9520eccbac5849a1bd5c98af590bfc0d\"\n});\n\nfunction Dashboard(props) {\n  _s();\n\n  const accessToken = useAuth(props.code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [lyrics, setLyrics] = useState(\"\");\n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch(\"\");\n    setLyrics(\"\");\n  }\n\n  console.log(accessToken);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  useEffect(() => {\n    if (!playingTrack) return;\n    axios.get(\"http://localhost:3001/lyrics\", {\n      params: {\n        track: playingTrack.title,\n        artist\n      }\n    });\n  }, [playingTrack]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => {\n        setSearch(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: [searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n        track: track,\n        chooseTrack: chooseTrack\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)), searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          whiteSpace: \"pre\"\n        },\n        children: lyrics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Dashboard, \"C/xkEiesDpJOEbcaLNXZ/RIs9iE=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/himanshu/Desktop/test/web development/my-spotify/my-spotify/client/src/Dashboard.js"],"names":["React","useState","useEffect","useAuth","Container","Form","SpotifyWebApi","TrackSearchResult","Player","axios","spotifyApi","clientId","Dashboard","props","accessToken","code","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","chooseTrack","track","console","log","setAccessToken","cancel","searchTracks","then","res","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","uri","albumUrl","url","get","params","e","target","value","overflowY","length","whiteSpace"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport useAuth from \"./useAuth.js\";\nimport {Container, Form} from \"react-bootstrap\"\nimport SpotifyWebApi from \"spotify-web-api-node\" \nimport TrackSearchResult from \"./TrackSearchResult.js\"\nimport Player from \"./Player.js\"\nimport axios from \"axios\";\nconst spotifyApi = new SpotifyWebApi({\n    clientId: \"9520eccbac5849a1bd5c98af590bfc0d\"\n})\n\nfunction Dashboard(props){\n    const accessToken = useAuth(props.code)\n    const [search, setSearch] = useState(\"\")\n    const [searchResults, setSearchResults] = useState([])\n    const [playingTrack, setPlayingTrack] = useState()\n    const [lyrics, setLyrics] = useState(\"\")\n\n\n    function chooseTrack(track){\n        setPlayingTrack(track)\n        setSearch(\"\")\n        setLyrics(\"\")\n    }\n    console.log(accessToken)\n    useEffect(()=>{\n       if(!accessToken) return\n       spotifyApi.setAccessToken(accessToken);\n    }, [accessToken])\n\n    useEffect(()=>{\n       if(!search) return setSearchResults([])\n       if(!accessToken) return\n       let cancel = false\n       spotifyApi.searchTracks(search).then(res=>{\n           if (cancel) return\n           setSearchResults(\n            res.body.tracks.items.map(track=>{\n                    const smallestAlbumImage = track.album.images.reduce(\n                        (smallest, image)=>{\n                            if(image.height < smallest.height) return image\n                            return smallest\n                        },\n                        track.album.images[0]\n                    )\n                    return{\n                        artist: track.artists[0].name,\n                        title: track.name,\n                        uri: track.uri,\n                        albumUrl: smallestAlbumImage.url\n                    }\n            })\n           )\n       })\n       return ()=> cancel=true\n    }, [search, accessToken])\n\n    useEffect(()=>{\n        if(!playingTrack) return\n        \n        axios.get(\"http://localhost:3001/lyrics\",{\n            params:{\n                track: playingTrack.title,\n                artist\n            }\n        })\n\n\n    },[playingTrack])\n\n    return(\n        <Container className=\"d-flex flex-column py-2\" style={{height: \"100vh\"}}>\n            <Form.Control\n                type='search'\n                placeholder=\"Search Songs/Artists\"\n                value={search}\n                onChange={e=>{setSearch(e.target.value)}}\n            />\n            <div className=\"flex-grow-1 my-2\" style={{overflowY:\"auto\"}}>\n                {searchResults.map(track=>(\n                    <TrackSearchResult track={track} key={track.uri} chooseTrack={chooseTrack}/>\n                ))}\n                {searchResults.length === 0 && (\n                    <div className=\"text-center\" style={{whiteSpace: \"pre\"}}>\n                        {lyrics}\n                    </div>\n                )}  \n\n\n            </div>\n            <div><Player accessToken={accessToken} trackUri={playingTrack?.uri} /></div>\n        </Container>\n    );\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}