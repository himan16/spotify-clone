{"ast":null,"code":"var _jsxFileName = \"/home/himanshu/Desktop/test/web development/my-spotify/my-spotify/client/src/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Player(props) {\n  _s();\n\n  console.log(props.trackUri);\n  if (!props.accessToken) return null;\n  const [play, setPlay] = useState(false);\n  useEffect(() => {\n    setPlay(true);\n  }, [props.trackUri]);\n  return /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n    token: props.accessToken,\n    showSaveIcon: true,\n    callback: state,\n    play: true,\n    uris: props.trackUri ? [props.trackUri] : []\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Player, \"jVhLcXDeOrLi5A95zDr62ndrz9E=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/himanshu/Desktop/test/web development/my-spotify/my-spotify/client/src/Player.js"],"names":["React","useEffect","useState","SpotifyPlayer","Player","props","console","log","trackUri","accessToken","play","setPlay","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,aAAP,MAA0B,4BAA1B;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAAA;;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AACA,MAAI,CAACH,KAAK,CAACI,WAAX,EAAwB,OAAO,IAAP;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACXU,IAAAA,OAAO,CAAC,IAAD,CAAP;AACF,GAFQ,EAEN,CAACN,KAAK,CAACG,QAAP,CAFM,CAAT;AAIA,sBACI,QAAC,aAAD;AACI,IAAA,KAAK,EAAEH,KAAK,CAACI,WADjB;AAEI,IAAA,YAAY,MAFhB;AAGI,IAAA,QAAQ,EAAEG,KAHd;AAII,IAAA,IAAI,EAAE,IAJV;AAKI,IAAA,IAAI,EAAGP,KAAK,CAACG,QAAN,GAAiB,CAACH,KAAK,CAACG,QAAP,CAAjB,GAAkC;AAL7C;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAlBQJ,M;;KAAAA,M;AAoBT,eAAeA,MAAf","sourcesContent":["import React, {useEffect, useState} from \"react\"\n\nimport SpotifyPlayer from \"react-spotify-web-playback\"\n\nfunction Player(props){\n    console.log(props.trackUri)\n    if (!props.accessToken) return null\n    const [play, setPlay] = useState(false)\n\n    useEffect(()=>{\n       setPlay(true)\n    }, [props.trackUri])\n         \n    return (\n        <SpotifyPlayer\n            token={props.accessToken}\n            showSaveIcon\n            callback={state}\n            play={true}\n            uris={ props.trackUri ? [props.trackUri]:[]}\n        />\n    )\n}\n\nexport default Player"]},"metadata":{},"sourceType":"module"}